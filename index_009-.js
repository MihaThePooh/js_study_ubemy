// урок 009 циклы


var num = 50;

//цикл while
/*
while (num < 55) {
    console.log(num);
    num++;
}
*/

// цикл do
/*
do {
    console.log(num);
    num++;
}
while (num < 55);
*/

// цикл for (используется в 95% случаев)

// for (let i = 1; i < 8; i++) {
//     if (i == 6) {
//         continue;
//         /*
//         break делает выход из всего цикла прямо из этой точки, остальной код после break просто не выполняется
//         continue прерывает цикл точно так же, тольк он прерывает одну итерацию цикла, если после этой итерации
//         логически должно следовать продолжение работы цикла, то цикл продолжает выполняться
//         */
//     }
//     console.log(i);
// }






// задание 2

//Какое будет выведено значение: let x = 5; alert( x++ ); ?
//let x = 5;
//alert( x++ ); // 5

//let y = 5;
//alert( ++y ); // 6







//Чему равно такое выражение: [ ] + false - null + true ?

// console.log([ ] + false - null + true); // NaN









//Что выведет этот код: let y = 1; let x = y = 2; alert(x); ?

// let y = 1;
// let x = y = 2;
// alert(x); // 2









//Чему равна сумма [ ] + 1 + 2?

// console.log([ ] + 1 + 2); // 12 ВСЕ ВЫВОДЫ ЭТО СТРОКА!!!







//Что выведет этот код: alert( "1"[0] )?

// alert( "1"[0] ); // 1








//Чему равно 2 && 1 && null && 0 && undefined ?

// alert(2 && 1 && null && 0 && undefined); // Null







//Есть ли разница между выражениями? !!( a && b ) и (a && b)?

// var a, b;
// alert(!!( a && b )); // false
// alert(a && b); // undefined








//Что выведет этот код: alert( null || 2 && 3 || 4 ); ?

// alert( null || 2 && 3 || 4 ); // 3

// подсказка от меня
/*
Логическое И (&&)	expr1 && expr2	(Логическое И) Возвращает операнд expr1, если он может быть преобразован в false; 
в противном случае возвращает операнд expr2. Таким образом, при использовании булевых величин в качестве операндов, 
оператор && возвращает true, если оба операнда true; в противном случае возвращает false.

Логическое ИЛИ (||)	expr1 || expr2	(Логическое ИЛИ) Возвращает операнд expr1, если он может быть преобразован в true; 
в противном случае возвращает операнд expr2. Таким образом, при использовании булевых величин в качестве операндов, 
оператор || возвращает true, если один из операндов true; если же оба false, то возвращает false.

Логическое НЕ (!)	!expr	(Логическое НЕ) Возвращает false, если операнд может быть преобразован в true; 
в противном случае возвращает true.
*/









//a = [1, 2, 3]; b = [1, 2, 3]; Правда ли что a == b ? // а и b не равны

// var a = [1, 2, 3],
//     b = [1, 2, 3];

// if (a == b) {
//     console.log("a и b равны");
// } else {
//     console.log("a и b не равны");
// }













//Что выведет этот код: alert( +"Infinity" ); ?

// alert( +"Infinity" ); // выведет строку, потому что + все приводит к строке













//Верно ли сравнение: "ёжик" > "яблоко"? // ёжик больше

// if ("ёжик" > "яблоко") {
//     console.log("ёжик больше");
// } else {
//     console.log("я хз");
// }













//Чему равно 0 || "" || 2 || undefined || true || falsе ?

console.log(0 || "" || 2 || undefined || true || falsе); // 2



